spark-uri = "local[*]"

sparknlp.settings.overrideConfigPath = "sparknlp.conf"

common {
  default-steps = [
    "all"
  ]
  partitions = 16
  output-format = "parquet"
  output = "gs://ot-snapshots/literature/20210413"
}

# this is a temporal lut for pmcid to pmid
# http://ftp.ebi.ac.uk/pub/databases/pmc/DOI/PMID_PMCID_DOI.csv.gz
processing {
  epmcids {
    format = "csv"
    path = "gs://ot-snapshots/otar025-epmc/PMID_PMCID_DOI.csv.gz"
    options = [
      {k: "header", v: "true"}
      {k: "inferSchema", v: "true"}
    ]
  }
  diseases {
    format = "parquet"
    path = "gs://ot-snapshots/otar025-epmc/diseases"
  }

  targets {
    format = "parquet"
    path = "gs://ot-snapshots/otar025-epmc/targets"
  }
  drugs {
    format = "parquet"
    path = "gs://ot-snapshots/otar025-epmc/molecule"
  }
  epmc {
    format = "json"
    path = "gs://ot-snapshots/otar025-epmc/20210408/"
  }
  outputs = {
    raw-evidence {
      format = ${common.output-format}
      path = ${common.output}"/rawEvidence"
    }
    cooccurrences {
      format = ${common.output-format}
      path = ${common.output}"/cooccurrences"
    }
    matches {
     format = ${common.output-format}
     path = ${common.output}"/matches"
    }
    literature-index {
      format = "json"
      path = ${common.output}"/literatureIndex"
    }
  }
}

embedding {
  num-synonyms = 50
  input = ${processing.outputs.literature-index}
  outputs = {
    wordvec {
     format = ${common.output-format}
     path = ${common.output}"/W2VModel"
    }
    wordvecsyn {
     format = ${common.output-format}
     path = ${common.output}"/W2VSynonyms"
    }
  }
}

vectors {
  input = ${embedding.outputs.wordvec.path}
  output {
    format = "json"
    path = ${common.output}"/vectors"
  }
}